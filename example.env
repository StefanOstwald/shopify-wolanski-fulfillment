NODE_ENV=production

# Time when Job is intended to be executed
MOMENTJS_LOCAL_TIMEZONE=Europe/Berlin


# Upload orders to Wolanski Workflow
# If the following code is added to the comment of the order, it will NOT be transmitted to Wolanski
ORDER_UPLOAD_CODE_IN_COMMENT_TO_NOT_FULFILL_ORDER=#dnf#
# This configuration defines that the workflow is expected to be executed at 12:05
# Lambda function are always in the GMT+0 timezone so the right time including
# dailight saving time is done in the code
ORDER_UPLOAD_EXECUTION_TIME_HOUR=12
ORDER_UPLOAD_EXECUTION_TIME_MIN=5
# As cron jobs are not necessarly on time the following attribute defines a buffer time
# in which orders are ignored. With this setup the last order which is taken into account
# is from 12:00. The rest goes into the next day.
ORDER_UPLOAD_BUFFER_TIME_FOR_LAST_ORDER_BEFORE_EXECUTION_TIME_MIN=5
# The folder is provided by wolanski
WOLANSKI_FTP_ORDER_UPLOAD_PATH=/auftraege/
# The folder in which a backup of the order csv shall be placed
WOLANSKI_FTP_ORDER_UPLOAD_BACKUP_PATH=/auftraege/innovatory-backup
# The ID is provided by Wolanski
WOLANSKI_ACCOUNT_NUMBER=15800
# The ID is provided by Wolanski
WOLANSKI_FULFILLMENT_NUMBER=220


# Update Tracking Information Workflow
# This configuration defines that the workflow is expected to be executed at 19:05
TRACKING_EXECUTION_TIME_HOUR=19
TRACKING_EXECUTION_TIME_MIN=5
# Shopify can inform the customer via email that the order was sent.
TRACKING_INFORM_CUSTOMER_ABOUT_TRACKING_INFO=true
# The folder is provided by wolanski
WOLANSKI_FTP_TRACKING_DOWNLOAD_PATH=/rueckmelde/


# Shopify Read Credentials
# Shopify Credentials with read_orders, write_orders rights for Orders, transactions and fulfillments
SHOPIFY_KEY=68ccb62087d214459XXXXXXXXX214cb
SHOPIFY_PW=ec5809f1796d676683b9XXXXXXXXXXX
SHOPIFY_BASE_URL=https://shop.myshopify.com
# The shopify location id is optional. If it is not set all locations will be retrieved 
# when a set of tracking data is sent to shopify and the first location will be used.
# The test shopify -> get LocationId write the locationId into the console.
SHOPIFY_LOCATION_ID=905684977
# Wolanski offer express delivery. It is transmitted via T_Bemerkung1. In order to offer it via
# Shopify you can create an express delivery shipping rate. The name of the express delivery 
# shipping rate has to be entered as the env variable SHOPIFY_EXPRESS_DELIVERY_NAME. If the 
# delivery is selected, the comment ## Express Versands ## is added to T_Bemerkung1.
SHOPIFY_EXPRESS_DELIVERY_NAME=Express Versand


# FTP Account provided by Wolanski
WOLANSKI_FTP_HOST=ftp.host.de
WOLANSKI_FTP_PORT=21
WOLANSKI_FTP_USER=ftpuser
WOLANSKI_FTP_PW=complicatedFtpPassword


# Notification via Slack
# Optional: If a webhook is provided and an error occurs a message is sent to slack.
SLACK_ERROR_URL=https://hooks.slack.com/services/T78S2KWMN/B7F3S5C5R/jqlVLOVXXXXXXXXXX
# Optional: If a webhook is provided and a warning occurs a message is sent to slack.
SLACK_WARNING_URL=https://hooks.slack.com/services/T78S2KWMN/B7F3S5C5R/jqlVLOVXXXXXXXXXX
# Optional: If a webhook is provided a status report for the tracking and order Upload
# workflow is sent to slack
SLACK_NOTIFICATION_URL=https://hooks.slack.com/services/T78S2KWMN/B7F7LNFKN/1mLcqJcDeXXXXXXXXXXX


# Deployment on Lambda
# The aws credentials are just needed locally for deployment
AWS_ACCESS_KEY_ID=AKIAJIXXXXXXXXXXXX
AWS_SECRET_ACCESS_KEY=rntdINt/FiRk/rXXXXXXXXX
AWS_DEFAULT_REGION=eu-central-1
LAMBDA_NAME=innovatory-fulfillment
